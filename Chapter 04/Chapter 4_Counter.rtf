{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Chapter 4\
\
//  counter contract \
\
// SPDX-License-Identifier: GPL-3.0\
// Smart Contract: SimpleCounter\
// This contract allows you to increment and retrieve a counter value.\
\
// Declare the version of Solidity we are using\
pragma solidity ^0.8.0;\
\
// Define the contract\
contract SimpleCounter \{\
    // Declare a state variable to store the counter value\
    uint256 private counter;\
\
    // Constructor function\
    constructor() \{\
        // Set the initial counter value to zero\
        counter = 0;\
    \}\
\
    // Function to increment the counter value by one\
    function incrementCounter() public \{\
        counter++;\
    \}\
\
    // Function to retrieve the current counter value\
    function getCounter() public view returns (uint256) \{\
        return counter;\
    \}\
\}\
}